<% layout("/layouts/boilerplate") %>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= dish.name %> - Ingredients & Products</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    :root {
      --primary: #6c5ce7;
      --primary-light: rgba(108, 92, 231, 0.5);
      --dark: #121225;
      --gray: #e0e0e0;
    }

    body {
      background-color: var(--gray);
      color: var(--dark);
      line-height: 1.6;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
      flex-grow: 1;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
      border-bottom: 1px solid var(--gray);
      margin-bottom: 30px;
    }

    .logo {
      font-size: 28px;
      font-weight: 700;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .back-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 10px 20px;
      background-color: var(--dark);
      color: var(--gray);
      text-decoration: none;
      border-radius: 30px;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .back-btn:hover {
      transform: translateX(-5px);
    }

    .dish-container {
      display: flex;
      gap: 40px;
      margin-bottom: 40px;
      flex-wrap: wrap;
    }

    .dish-image {
      flex: 1;
      min-width: 300px;
      border-radius: 15px;
      overflow: hidden;
      height: 350px;
      position: relative;
      background: linear-gradient(45deg, var(--primary), var(--primary-light));
    }

    .dish-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
    }

    .dish-info {
      flex: 1;
      min-width: 300px;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .dish-title {
      font-size: 42px;
      margin-bottom: 15px;
      color: var(--dark);
      line-height: 1.2;
    }

    .dish-description {
      font-size: 18px;
      color: var(--dark);
      margin-bottom: 25px;
    }

    .dish-meta {
      display: flex;
      gap: 20px;
      margin-top: 20px;
      flex-wrap: wrap;
    }

    .meta-item {
      display: flex;
      align-items: center;
      gap: 8px;
      background: var(--gray);
      padding: 12px 20px;
      border-radius: 10px;
      box-shadow: 0 4px 15px var(--primary-light);
    }

    .meta-item i {
      font-size: 20px;
    }

    .dish-type {
      position: absolute;
      top: 20px;
      right: 20px;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--gray);
      font-weight: bold;
    }

    .dish-category {
      position: absolute;
      top: 20px;
      left: 20px;
      padding: 8px 15px;
      border-radius: 30px;
      color: var(--gray);
      font-weight: 600;
      font-size: 14px;
    }

    .section-title {
      font-size: 32px;
      margin: 30px 0 20px;
      color: var(--dark);
      position: relative;
      padding-bottom: 15px;
    }

    .section-title::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 70px;
      height: 4px;
      border-radius: 2px;
    }

    .ingredient-group {
      background: var(--gray);
      border-radius: 15px;
      overflow: hidden;
      margin-bottom: 30px;
      transition: transform 0.3s ease;
    }

    .ingredient-group:hover {
      transform: translateY(-5px);
    }

    .ingredient-header {
      color: black;
      padding: 20px 25px;
      font-size: 22px;
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .ingredient-header i {
      font-size: 26px;
    }

    .products-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 25px;
      padding: 25px;
    }

    .product-card {
      border: 1px solid var(--gray);
      border-radius: 12px;
      overflow: hidden;
      transition: all 0.3s ease;
      display: flex;
      flex-direction: column;
      height: 100%;
    }

    .product-card[hidden] {
      display: none !important;
    }

    .product-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px var(--primary-light);
      border-color: var(--primary);
    }

    .product-image {
      height: 180px;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .product-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.5s ease;
    }

    .product-card:hover .product-image img {
      transform: scale(1.05);
    }

    .product-info {
      padding: 20px;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }

    .product-name {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: 10px;
      color: var(--dark);
    }

    .product-meta {
      display: flex;
      justify-content: space-between;
      margin-top: auto;
      padding-top: 15px;
    }

    .product-weight, .product-price {
      display: flex;
      align-items: center;
      gap: 5px;
      font-size: 15px;
    }

    .product-price {
      color: var(--primary);
      font-weight: 700;
      font-size: 18px;
    }

    .add-to-cart-btn {
      background: var(--primary);
      color: var(--gray);
      border: none;
      padding: 10px 15px;
      font-size: 14px;
      border-radius: 25px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      margin-top: 15px;
      transition: all 0.3s ease;
      font-weight: 600;
      width: 100%;
    }

    .add-to-cart-btn:hover {
      background: var(--primary-light);
      transform: translateY(-2px);
    }

    .add-to-cart-btn i {
      font-size: 16px;
    }

    .see-more-btn {
      background: var(--primary);
      color: var(--gray);
      border: none;
      padding: 12px 25px;
      font-size: 16px;
      border-radius: 30px;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 8px;
      margin: 10px 25px 25px auto;
      transition: all 0.3s ease;
      font-weight: 600;
    }

    .see-more-btn:hover {
      background: var(--primary-light);
      transform: translateY(-2px);
    }

    .see-more-btn i {
      transition: transform 0.3s ease;
    }

    .see-more-btn.expanded i {
      transform: rotate(180deg);
    }

    .smart-cart-btn {
      position: relative;
      padding: 10px 40px;
      min-width: 180px;
      background-color: var(--primary);
      color: #fff;
      border: none;
      border-radius: 25px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
      margin: 20px auto;
    }

    .smart-cart-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
      );
      transition: 0.5s;
    }

    .smart-cart-btn:hover::before {
      left: 100%;
    }

    .smart-cart-btn:hover {
      transform: scale(1.05);
      box-shadow: 0 6px 15px rgba(108, 92, 231, 0.4);
    }

    .smart-cart-btn:active {
      transform: scale(0.95);
    }

    .footer {
      text-align: center;
      padding: 30px 0;
      margin-top: 50px;
      color: var(--dark);
      border-top: 1px solid var(--gray);
    }
  </style>
</head>
<body>
  <div class="container">
    <header class="header">
      <div class="logo">
        <i class="fas fa-utensils"></i>
        DishDiscover
      </div>
      <a href="/smartdish" class="back-btn">
        <i class="fas fa-arrow-left"></i>
        Back to Home
      </a>
    </header>

    <main>
      <div class="dish-container">
        <div class="dish-image">
          <% if (dish.image) { %>
            <img src="<%= dish.image %>" alt="<%= dish.name %>">
          <% } else { %>
            <div style="display: flex; align-items: center; justify-content: center; height: 100%; background: linear-gradient(45deg, var(--primary), var(--primary-light)); color: var(--dark); font-size: 24px; font-weight: bold;">
              <i class="fas fa-image"></i>
            </div>
          <% } %>
          <div class="dish-type <%= dish.type === 'non-veg' ? 'non-veg' : 'veg' %>">
            <%= dish.type === 'non-veg' ? 'N' : 'V' %>
          </div>
          <% if (dish.category === 'royal') { %>
            <div class="dish-category">
              <i class="fas fa-crown"></i> Royal
            </div>
          <% } %>
        </div>

        <div class="dish-info">
          <h1 class="dish-title"><%= dish.name %></h1>
          <p class="dish-description">
            <%= dish.description || 'Delicious dish with premium ingredients' %>
          </p>

          <div class="dish-meta">
            <div class="meta-item">
              <i class="fas fa-layer-group"></i>
              <span><%= dish.category || 'Regular' %></span>
            </div>
            <div class="meta-item">
              <i class="fas fa-tag"></i>
              <span><%= dish.type === 'non-veg' ? 'Non-Vegetarian' : 'Vegetarian' %></span>
            </div>
          </div>
        </div>
      </div>

      <h2 class="section-title">Ingredients & Products</h2>
      
      <button class="smart-cart-btn" data-dish-id="<%= dish._id %>">Smart Cart</button>

      <% if (dish.ingredients && dish.ingredients.length > 0) { %>
        <% products.forEach((productGroup, groupIndex) => { %>
          <div class="ingredient-group">
            <div class="ingredient-header">
              <i class="fas fa-seedling"></i>
              <%= productGroup.ingredient %>
            </div>

            <div class="products-grid">
              <% if (productGroup.products.length > 0) { %>
                <% productGroup.products.forEach((product, index) => { %>
                  <div class="product-card" <%= index >= 4 ? 'hidden' : '' %>>
                    <div class="product-image">
                      <% if (product.image) { %>
                        <img src="<%= product.image %>" alt="<%= product.name %>">
                      <% } else { %>
                        <div style="display: flex; align-items: center; justify-content: center; height: 100%; width: 100%; background: linear-gradient(45deg, var(--primary), var(--primary-light)); color: var(--dark); font-size: 18px;">
                          <i class="fas fa-image"></i>
                        </div>
                      <% } %>
                    </div>
                    <div class="product-info">
                      <h3 class="product-name"><%= product.name %></h3>
                      <div class="product-meta">
                        <span class="product-weight">
                          <i class="fas fa-weight-hanging"></i> 
                          <%= product.weight || '200g' %>
                        </span>
                        <span class="product-price">
                          <i class="fas fa-tag"></i> 
                          <%= product.price || '149' %>
                        </span>
                      </div>
                      <button class="add-to-cart-btn" data-product-id="<%= product._id || index %>" data-product-name="<%= product.name %>" data-product-price="<%= product.price || '149' %>" data-product-weight="<%= product.weight || '200g' %>" data-product-image="<%= product.image || '' %>">
                        <i class="fas fa-cart-plus"></i> Add to Cart
                      </button>
                    </div>
                  </div>
                <% }) %>
              <% } else { %>
                <div class="no-products">
                  <i class="fas fa-box-open" style="font-size: 48px; margin-bottom: 15px; color: var(--dark);"></i>
                  <p>No products available for <%= productGroup.ingredient %></p>
                </div>
              <% } %>
            </div>

            <% if (productGroup.products.length > 4) { %>
              <button class="see-more-btn" data-group="<%= groupIndex %>">
                <i class="fas fa-chevron-down"></i>
                See More
              </button>
            <% } %>
          </div>
        <% }) %>
      <% } else { %>
        <div class="no-ingredients">
          <i class="fas fa-info-circle"></i>
          <h3>No Ingredients Listed</h3>
          <p>This dish doesn't have any ingredients added yet.</p>
        </div>
      <% } %>
    </main>

    <footer class="footer">
      <p>© 2023 DishDiscover. All rights reserved.</p>
      <p>Find the perfect ingredients for your culinary creations</p>
    </footer>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Existing "See More" button functionality
      document.querySelectorAll('.see-more-btn').forEach(button => {
        button.addEventListener('click', () => {
          const groupIndex = button.getAttribute('data-group');
          const ingredientGroup = button.closest('.ingredient-group');
          const productsGrid = ingredientGroup.querySelector('.products-grid');
          const allCards = productsGrid.querySelectorAll('.product-card');
          const isExpanded = button.textContent.includes('Less');

          allCards.forEach((card, index) => {
            if (isExpanded) {
              if (index >= 4) {
                card.setAttribute('hidden', '');
              }
            } else {
              card.removeAttribute('hidden');
            }
          });

          button.innerHTML = isExpanded ? 
            '<i class="fas fa-chevron-down"></i> See More' : 
            '<i class="fas fa-chevron-up"></i> See Less';
          button.classList.toggle('expanded');
        });
      });

      // Add to Cart button functionality
      document.querySelectorAll('.add-to-cart-btn').forEach(button => {
        button.addEventListener('click', () => {
          const productId = button.getAttribute('data-product-id');
          const productName = button.getAttribute('data-product-name');
          const productPrice = button.getAttribute('data-product-price');
          const productWeight = button.getAttribute('data-product-weight');
          const productImage = button.getAttribute('data-product-image');

          // Get existing cart from localStorage or initialize empty array
          let cart = JSON.parse(localStorage.getItem('cart')) || [];

          // Check if product already exists in cart
          const existingProduct = cart.find(item => item.id === productId);
          if (existingProduct) {
            existingProduct.quantity = (existingProduct.quantity || 1) + 1;
          } else {
            // Add new product to cart
            cart.push({
              id: productId,
              name: productName,
              price: productPrice,
              weight: productWeight,
              image: productImage,
              quantity: 1
            });
          }

          // Save updated cart to localStorage
          localStorage.setItem('cart', JSON.stringify(cart));

          // Open the cart overlay
          const cartOverlay = document.getElementById('cart-overlay');
          if (cartOverlay) {
            cartOverlay.classList.add('active');
          }
        });
      });

      // Smart Cart functionality
      const smartCartButtons = document.querySelectorAll('.smart-cart-btn');
      const cartOverlay = document.getElementById('cart-overlay');
      const msg = document.querySelector('#msg');

      if (!cartOverlay || !msg) {
        console.error('Cart overlay or message element not found in the DOM');
        return;
      }

      smartCartButtons.forEach(button => {
        button.addEventListener('click', async (e) => {
          e.preventDefault(); // Prevent default link behavior
          e.stopPropagation(); // Prevent click from bubbling to the parent <a> tag

          const dishId = button.getAttribute('data-dish-id');
          if (!dishId) {
            console.error('Dish ID not found on button');
            msg.textContent = 'Invalid dish ID.';
            msg.classList.add('show');
            setTimeout(() => {
              msg.classList.remove('show');
              msg.textContent = '';
            }, 3000);
            return;
          }

          try {
            console.log(`Fetching products for dish ID: ${dishId}`);
            const response = await fetch(`/smart-cart/${dishId}`, {
              method: 'GET',
              headers: {
                'Content-Type': 'application/json',
              },
              credentials: 'include', // Include cookies for session
            });

            if (!response.ok) {
              const errorText = await response.text();
              console.error(`HTTP error! Status: ${response.status}, Response: ${errorText}`);
              throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const contentType = response.headers.get('content-type');
            if (!contentType || !contentType.includes('application/json')) {
              console.error('Response is not JSON:', await response.text());
              throw new Error('Invalid response format from server');
            }

            const data = await response.json();
            console.log('Response data:', data);

            const products = data.products || [];
            if (products.length === 0) {
              console.warn('No products returned for dish ID:', dishId);
              msg.textContent = 'No products available for this dish.';
              msg.classList.add('show');
              setTimeout(() => {
                msg.classList.remove('show');
                msg.textContent = '';
              }, 3000);
              return;
            }

            // Get existing cart from localStorage
            let cart = JSON.parse(localStorage.getItem('cart')) || [];

            // Group products by ingredient to select one product per ingredient
            const productsByIngredient = {};
            products.forEach(product => {
              if (!product.ingredient) {
                console.warn('Product missing ingredient field:', product);
                return;
              }
              const ingredientId = product.ingredient.toString();
              if (!productsByIngredient[ingredientId]) {
                productsByIngredient[ingredientId] = product;
              }
            });

            // Add one product per ingredient to the cart
            Object.values(productsByIngredient).forEach(product => {
              if (!product._id || !product.name || !product.price) {
                console.warn('Invalid product data:', product);
                return;
              }
              const existingItem = cart.find(item => item.id === product._id.toString());
              if (existingItem) {
                // Increment quantity if product is already in cart
                existingItem.quantity += 1;
                console.log(`Incremented quantity for ${product.name}: ${existingItem.quantity}`);
              } else {
                // Add new product to cart
                const cartItem = {
                  id: product._id.toString(),
                  name: product.name,
                  price: `${(product.price)}`, // Store with ₹ symbol
                  image: product.image || 'https://via.placeholder.com/70',
                  weight: product.weight,
                  quantity: 1,
                };
                cart.push(cartItem);
                console.log(`Added to cart: ${product.name}`);
              }
            });

            // Save updated cart to localStorage
            localStorage.setItem('cart', JSON.stringify(cart));
            console.log('Updated cart:', cart);

            // Check if renderCart is available
            if (typeof renderCart !== 'function') {
              console.error('renderCart function is not defined');
              msg.textContent = 'Cart display function not available.';
              msg.classList.add('show');
              setTimeout(() => {
                msg.classList.remove('show');
                msg.textContent = '';
              }, 3000);
              return;
            }

            // Update cart display
            renderCart();

            // Show cart overlay
            cartOverlay.classList.add('active');

            // Show success message
            msg.textContent = 'Products added to cart!';
            msg.classList.add('show');
            setTimeout(() => {
              msg.classList.remove('show');
              msg.textContent = '';
            }, 3000);

          } catch (error) {
            console.error('Error adding products to cart:', error.message);
            msg.textContent = `Failed to add products: ${error.message}`;
            msg.classList.add('show');
            setTimeout(() => {
              msg.classList.remove('show');
              msg.textContent = '';
            }, 3000);
          }
        });
      });
    });
  </script>
</body>
</html>




